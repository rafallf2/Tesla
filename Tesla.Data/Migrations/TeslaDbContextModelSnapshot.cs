// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tesla.Data.Database;

#nullable disable

namespace Tesla.Data.Migrations
{
    [DbContext(typeof(TeslaDbContext))]
    partial class TeslaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarCarLocalisation", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CarLocalisationId")
                        .HasColumnType("int");

                    b.HasKey("CarId", "CarLocalisationId");

                    b.HasIndex("CarLocalisationId");

                    b.ToTable("CarCarLocalisation");
                });

            modelBuilder.Entity("CarLocalisationLocalisation", b =>
                {
                    b.Property<int>("CarLocalisationId")
                        .HasColumnType("int");

                    b.Property<int>("LocalisationId")
                        .HasColumnType("int");

                    b.HasKey("CarLocalisationId", "LocalisationId");

                    b.HasIndex("LocalisationId");

                    b.ToTable("CarLocalisationLocalisation");
                });

            modelBuilder.Entity("Tesla.Data.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CostPerDay")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Tesla.Data.Models.CarLocalisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Availability")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CarLocalisations");
                });

            modelBuilder.Entity("Tesla.Data.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Tesla.Data.Models.Localisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Localisations");
                });

            modelBuilder.Entity("Tesla.Data.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocalisationId")
                        .HasColumnType("int");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ClientId");

                    b.HasIndex("LocalisationId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CarCarLocalisation", b =>
                {
                    b.HasOne("Tesla.Data.Models.Car", null)
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tesla.Data.Models.CarLocalisation", null)
                        .WithMany()
                        .HasForeignKey("CarLocalisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarLocalisationLocalisation", b =>
                {
                    b.HasOne("Tesla.Data.Models.CarLocalisation", null)
                        .WithMany()
                        .HasForeignKey("CarLocalisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tesla.Data.Models.Localisation", null)
                        .WithMany()
                        .HasForeignKey("LocalisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tesla.Data.Models.Reservation", b =>
                {
                    b.HasOne("Tesla.Data.Models.Car", "Car")
                        .WithMany("Reservation")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tesla.Data.Models.Client", "Client")
                        .WithMany("Reservation")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tesla.Data.Models.Localisation", "Localisation")
                        .WithMany("Reservation")
                        .HasForeignKey("LocalisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Client");

                    b.Navigation("Localisation");
                });

            modelBuilder.Entity("Tesla.Data.Models.Car", b =>
                {
                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Tesla.Data.Models.Client", b =>
                {
                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Tesla.Data.Models.Localisation", b =>
                {
                    b.Navigation("Reservation");
                });
#pragma warning restore 612, 618
        }
    }
}
